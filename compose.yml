networks:
  mediastack:
    name: mediastack
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: ${DOCKER_SUBNET:?err}
        gateway: ${DOCKER_GATEWAY:?err}

services:
# ========================== VPN ==========================
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    restart: always
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - "8888:8888/tcp"                         # Gluetun Local Network HTTP proxy
      - "8388:8388/tcp"                         # Gluetun Local Network Shadowsocks
      - "8388:8388/udp"                         # Gluetun Local Network Shadowsocks
      - "${WEBUI_PORT_QBITTORRENT:?err}:${WEBUI_PORT_QBITTORRENT:?err}"   # WebUI Portal: qBittorrent
      - "${QBIT_PORT:?err}:6881"                # Transmission Torrent Port

    volumes:
      - ${FOLDER_FOR_DATA:?err}/gluetun:/gluetun
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:?err}
      - OPENVPN_USER=${VPN_USERNAME:?err}
      - OPENVPN_PASSWORD=${VPN_PASSWORD:?err}
      - SERVER_COUNTRIES=${SERVER_COUNTRIES}
      - SERVER_REGIONS=${SERVER_REGIONS}
      - SERVER_CITIES=${SERVER_CITIES}
      - SERVER_HOSTNAMES=${SERVER_HOSTNAMES}
      - SERVER_CATEGORIES=${SERVER_CATEGORIES}
      - FIREWALL_OUTBOUND_SUBNETS=${LOCAL_SUBNET:?err}
      - OPENVPN_CUSTOM_CONFIG=${OPENVPN_CUSTOM_CONFIG}
      - HTTP_CONTROL_SERVER_ADDRESS=:${GLUETUN_CONTROL_PORT:?err}
      - VPN_TYPE=${VPN_TYPE}
      - VPN_ENDPOINT_IP=${VPN_ENDPOINT_IP}
      - VPN_ENDPOINT_PORT=${VPN_ENDPOINT_PORT}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_PRESHARED_KEY=${WIREGUARD_PRESHARED_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - HTTPPROXY=on
      - SHADOWSOCKS=on
    networks:
      - mediastack

# ========================== Core Media Containers ==========================
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_DATA:?err}/qbittorrent:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - WEBUI_PORT=${WEBUI_PORT_QBITTORRENT:?err}
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:qbittorrent
      - TP_THEME=${TP_THEME:?err}
    network_mode: "service:gluetun"

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
# Add Configurations for GPU Hardware Rendering Here:
#    devices:
#      - /dev/dri/renderD128:/dev/dri/renderD128
#      - /dev/dri/card0:/dev/dri/card0
    volumes:
      - ${FOLDER_FOR_DATA:?err}/jellyfin:/config
      - ${FOLDER_FOR_MEDIA:?err}/media:/data/media
    ports:
      - "${WEBUI_PORT_JELLYFIN:?err}:8096"
#      - 7359:7359/udp      # Enable for DLNA - Only works on HOST Network Mode
#      - 1900:1900/udp      # Enable for DLNA - Only works on HOST Network Mode
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
#      - JELLYFIN_PublishedServerUrl=${LOCAL_DOCKER_IP:?err}  # Enable for DLNA - Only works on HOST Network Mode
    networks:
      - mediastack

# ========================== ARR STACK ==========================

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_DATA:?err}/prowlarr:/config
    ports:
      - "${WEBUI_PORT_PROWLARR:?err}:9696"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:prowlarr
      - TP_THEME=${TP_THEME:?err}
    networks:
      - mediastack

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_DATA:?err}/sonarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_SONARR:?err}:8989"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:sonarr
      - TP_THEME=${TP_THEME:?err}

    networks:
      - mediastack
  
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_DATA:?err}/radarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_RADARR:?err}:7878"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:radarr
      - TP_THEME=${TP_THEME:?err}
    networks:
      - mediastack
  
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_DATA:?err}/readarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_READARR:?err}:8787"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:readarr
      - TP_THEME=${TP_THEME:?err}
    networks:
      - mediastack
  
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_DATA:?err}/bazarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_BAZARR:?err}:6767"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:bazarr
      - TP_THEME=${TP_THEME:?err}

    networks:
      - mediastack
  
  tdarr:
    image: ghcr.io/haveagitgat/tdarr:2.31.02
    container_name: tdarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_DATA:?err}/tdarr/server:/app/server
      - ${FOLDER_FOR_DATA:?err}/tdarr/configs:/app/configs
      - ${FOLDER_FOR_DATA:?err}/tdarr/logs:/app/logs
      - ${FOLDER_FOR_DATA:?err}/tdarr_transcode_cache:/temp
      - ${FOLDER_FOR_MEDIA:?err}/media:/data
    ports:
      - "${TDARR_SERVER_PORT:?err}:${TDARR_SERVER_PORT:?err}"
      - "${WEBUI_PORT_TDARR:?err}:${WEBUI_PORT_TDARR:?err}"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - serverIP=0.0.0.0
      - serverPort=${TDARR_SERVER_PORT:?err}
      - webUIPort=${WEBUI_PORT_TDARR:?err}
      - internalNode=true
      - nodeID=Tdarr_Server
    networks:
      - mediastack

  tdarr-node:
    image: ghcr.io/haveagitgat/tdarr_node:2.31.02
    container_name: tdarr-node
    depends_on:
      - tdarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_DATA:?err}/tdarr/configs:/app/configs
      - ${FOLDER_FOR_DATA:?err}/tdarr/logs:/app/logs
      - ${FOLDER_FOR_DATA:?err}/tdarr_transcode_cache:/temp
      - ${FOLDER_FOR_MEDIA:?err}/media:/data
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - nodeID=Tdarr_Node_1
      - serverIP=0.0.0.0
      - serverPort=${TDARR_SERVER_PORT:?err}
    networks:
      - mediastack

# ========================== Utilities ==========================
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_DATA:?err}/jellyseerr:/app/config
    ports:
      - "${WEBUI_PORT_JELLYSEERR:?err}:5055"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
    networks:
      - mediastack

  filebot:
    image: rednoah/filebot:xpra
    container_name: filebot
    restart: unless-stopped
    ports:
      - "${WEBUI_PORT_FILEBOT:?err}:5454"
    volumes:
      - ${FOLDER_FOR_DATA:?err}/filebot:/data/filebot
      - ${FOLDER_FOR_MEDIA:?err}/filebot:/filebot
    environment:
#      - XPRA_AUTH=password:value=YOUR_PASSWORD
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - DARK_MODE=1
    networks:
      - mediastack

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    ports:
      - "${FLARESOLVERR_PORT:?err}:8191"
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=${TIMEZONE:?err}

    networks:
      - mediastack

  homarr:
    image: ghcr.io/ajnart/homarr:latest
    container_name: homarr
    restart: unless-stopped
    ports:
      - "${WEBUI_PORT_HOMARR:?err}:7575"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${FOLDER_FOR_DATA:?err}/homarr/configs:/app/data/configs
      - ${FOLDER_FOR_DATA:?err}/homarr/icons:/app/public/icons
      - ${FOLDER_FOR_DATA:?err}/homarr/data:/data
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}

    networks:
      - mediastack
  
  unpackerr:
    image: ghcr.io/hotio/unpackerr:latest
    container_name: unpackerr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_DATA:?err}/unpackerr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
# Documentation on all Environment Variables can be found at:
# https://github.com/davidnewhall/unpackerr#docker-env-variables
      - UN_DEBUG=false
      - UN_LOG_FILE=
      - UN_LOG_FILES=10
      - UN_LOG_FILE_MB=10
      - UN_INTERVAL=2m
      - UN_START_DELAY=1m
      - UN_RETRY_DELAY=5m
      - UN_MAX_RETRIES=3
      - UN_PARALLEL=1
      - UN_FILE_MODE=0664
      - UN_DIR_MODE=0775
      # Sonarr Config - Copy API Key from: http://sonarr:8989/general/settings
      - UN_SONARR_0_URL=http://sonarr:8989
      - UN_SONARR_0_API_KEY=${SONARR_API_KEY:?err}
      - UN_SONARR_0_PATHS_0=/data/torrents/anime
      - UN_SONARR_0_PATHS_1=/data/torrents/tv
      - UN_SONARR_0_PROTOCOLS=torrent
      - UN_SONARR_0_TIMEOUT=10s
      - UN_SONARR_0_DELETE_ORIG=false
      - UN_SONARR_0_DELETE_DELAY=5m
      # Radarr Config - Copy API Key from: http://radarr:7878/general/settings
      - UN_RADARR_0_URL=http://radarr:7878
      - UN_RADARR_0_API_KEY=${RADARR_API_KEY:?err}
      - UN_RADARR_0_PATHS_0=/data/torrents/movies
      - UN_RADARR_0_PROTOCOLS=torrent
      - UN_RADARR_0_TIMEOUT=10s
      - UN_RADARR_0_DELETE_ORIG=false
      - UN_RADARR_0_DELETE_DELAY=5m
      # Readarr Config - Copy API Key from: http://readarr:8787/general/settings
      - UN_READARR_0_URL=http://readarr:8787
      - UN_READARR_0_API_KEY=${READARR_API_KEY:?err}
      - UN_READARR_0_PATHS_0=/data/torrents/books
      - UN_READARR_0_PROTOCOLS=torrent
      - UN_READARR_0_TIMEOUT=10s
      - UN_READARR_0_DELETE_ORIG=false
      - UN_READARR_0_DELETE_DELAY=5m
      # Folder Config
      - UN_FOLDER_0_PATH=
      - UN_FOLDER_0_EXTRACT_PATH=
      - UN_FOLDER_0_DELETE_AFTER=10m
      - UN_FOLDER_0_DELETE_ORIGINAL=false
      - UN_FOLDER_0_DELETE_FILES=false
      - UN_FOLDER_0_MOVE_BACK=false
      # Webhook Config
      - UN_WEBHOOK_0_URL=
      - UN_WEBHOOK_0_NAME=
      - UN_WEBHOOK_0_NICKNAME=Unpackerr
      - UN_WEBHOOK_0_CHANNEL=
      - UN_WEBHOOK_0_TIMEOUT=10s
      - UN_WEBHOOK_0_SILENT=false
      - UN_WEBHOOK_0_IGNORE_SSL=false
      - UN_WEBHOOK_0_EXCLUDE_0=
      - UN_WEBHOOK_0_EVENTS_0=0
      - UN_WEBHOOK_0_TEMPLATE_PATH=
      - UN_WEBHOOK_0_CONTENT_TYPE=application/json
      # Command Hook Config
      - UN_CMDHOOK_0_COMMAND=
      - UN_CMDHOOK_0_NAME=
      - UN_CMDHOOK_0_TIMEOUT=10s
      - UN_CMDHOOK_0_SILENT=false
      - UN_CMDHOOK_0_SHELL=false
      - UN_CMDHOOK_0_EXCLUDE_0=
      - UN_CMDHOOK_0_EVENTS_0=0

    security_opt:
      - no-new-privileges:true

    network_mode: none
